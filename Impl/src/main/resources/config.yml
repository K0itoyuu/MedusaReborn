##############################
#    Medusa Configuration    #
##############################

# Appearance configuration.
# If you want to change how Medusa looks, you can do it here.
appearance:

  # Theme system.
  # How to make theme:
  # Split the string with dollar sign symbol ($)
  # First, put the name of the Theme (Ex: Medusa)
  # Then, put $ and space after it (Ex: Medusa$ )
  #
  # After this, put the alert format and a $ after it,
  # followed by a space (Ex: &aMedusa » &f%player% &7failed &f%checkName% &7(x%vl%)$ )
  #
  # Then, put TWO (no more, no less, can be the same)
  # accent colours you want using the Minecraft colour code symbols (Ex: &a &c)
  #
  # Placeholders:
  # %player% - Player's name
  # %uuid% - Player's UUID
  # %checkName% - Name of the check (e.g. Reach, AutoClicker, KillAura, Speed, Fly)
  # %checkType% - ID of the check, just a letter like A, B, C.
  # %dev% - Experimental status of the check, if the check has a "*" after it, it's experimental.
  # %vl% - Current violation level of the check flagged.
  # %maxvl% - Maximum violation level of the check flagged.
  # %ping% - Latency of the player.
  # %tps% - TPS of the server.

  themes:
    Medusa:
      message: 'Medusa » &f%player% &7failed &f%checkName% (%checkType%) &7(x%vl%) &c%dev%'
      colors:
        - '&a'
        - '&2'
    Overflow:
      message: '&7[&cMedusa&7] %player% flagged &c%checkName% (type %checkType%) VL: &c%vl% %dev%'
      colors:
        - '&c'
        - '&4'
    Sparky:
      message: '&eMedusa &7> &6%player% &7has failed &6%checkName% (%checkType%) &cx%vl%'
      colors:
        - '&6'
        - '&e'
    Karhu:
      message: '&8[&b&lMedusa&r&8] &3%player% &8- &3%checkName% %checkType% &f%dev% &3(&bx%vl%&3)'
      colors:
        - '&b'
        - '&3'
    Rock:
      message: '&8[&c!&8] &f%player% &7may be using &f%checkName% &c(%vl%)'
      colors:
        - '&c'
        - '&c'
    Vulcan:
      message: '&8[&c&l!&8] &c%player% &7failed &b%checkName% (Type %checkType%) &7[VL: &c%vl%&7]'
      colors:
        - '&c'
        - '&7'
    VulcanNew:
      message: '&cMedusa &8/ &c%player% &7failed &b%checkName% &7(&bType %checkType%&7) (%vl%/%maxvl%)'
      colors:
        - '&b'
        - '&3'
    AAC:
      message: '&7[&6MEDUSA&7] &2[CONSOLE] &f%player% is suspected of using %checkName% (%ping%ms, %tps%TPS)'
      colors:
        - '&f'
        - '&6'
    Spartan:
      message: '&8[&2Medusa&8] &c%player% failed %checkName% (VL: %vl%) &8(&fPing: %ping%ms&8) (&fTPS: %tps%&8) (&freason: type %checkType%, hover for more info.&8)'
      colors:
        - '&a'
        - '&2'
    GodsEye:
      message: '&6Medusa >> &c%player% &7failed &c%checkName% &8[&fType%checkType%&8] [&fx%vl%&8]'
      colors:
        - '&6'
        - '&c'
    Reflex:
      message: '&5Medusa &8» &7%player% &f%checkName% %checkType% &d%vl%/%maxvl% &7| ping: %ping% | tps: %tps%'
      colors:
        - '&d'
        - '&5'
    Iris:
      message: '&8[&b&lMedusa&r&8] &f%player% &7has failed &f%checkName% (%checkType%) &c(x%vl%)'
      colors:
        - '&7'
        - '&b'

  # Accent colours. Changes color look of aspects of Medusa.
  accents:
    accentOne: '&a'
    accentTwo: '&2'

# Violation configuration section.
# Placeholders:
# %player% - Player's name
# %uuid% - Player's UUID
# %checkName% - Name of the check (e.g. Reach, AutoClicker, KillAura, Speed, Fly)
# %checkType% - ID of the check, just a letter like A, B, C.
# %dev% - Experimental status of the check, if the check has a "*" after it, it's experimental.
# %vl% - Current violation level of the check flagged.
# %maxvl% - Maximum violation level of the check flagged.
# %ping% - Latency of the player.
# %tps% - TPS of the server.
# (VL = Violation Level = How many times a player has flagged the check)
violations:
  # Changes how Medusa's default notifications look.
  alert-format: '&aMedusa » &f%player% &7failed &f%checkName% (%checkType%) &7(x%vl%) &c%dev%'
  # Time which has to be elapsed between notifications to prevent chat spam.
  alert-cooldown: 0
  # How much VL the check has to have in order to notify staff.
  minimum-vl-to-alert: 0
  # Time in minutes for how ofter the violations for players will be reset.
  clear-violations-delay: 5

# Check configuration
# enabled: Turns the check on/off.
# max-violations: Amount of times a player can flag before running the specified punish-command.
# punish-command: Command ran by the server when a player exceeds the specified max-violations.
checks:
  # Combat Detections: Offers various checks designed to detect modules used to give a significant combat advantage.
  combat:
    # Reach Detections:
    reach:
      # Checks if the player using reach.
      a:
        enabled: true
        max-violations: 5
        punish-command: ''
    # KillAura Detections: Capable of detecting some KillAura modules on various clients. Recommended to ban for these
    # checks, however use at your own risk.
    killaura:
      # Checks for packet order flaw found in some KillAura modules.
      a:
        enabled: true
        max-violations: 5
        punish-command: ''
      # Checks for sprint movement flaw found in most KillAura modules.
      b:
        enabled: true
        max-violations: 5
        punish-command: ''
      # Checks for hitting multiple entities at once. (MultiAura Detection)
      c:
        enabled: true
        max-violations: 5
        punish-command: ''
      # Checks for an improbable accuracy. If the player is very accurate in fights, flag.
      d:
        enabled: true
        max-violations: 5
        punish-command: ''
      # Checks for attacking without swinging. (NoSwing Detection for combat)
      e:
        enabled: true
        max-violations: 5
        punish-command: ''
      # Checks for hitting through walls. (AttackOcclusion Detection)
      f:
        enabled: true
        max-violations: 50
        punish-command: ''
      # Checks for large head movements without slowing down.
      g:
        enabled: true
        max-violations: 50
        punish-command: ''
      # Checks for player attacked rotation speed
      h:
        enabled: true
        max-violations: 15
        punish-command: ''
    autoblock:
      # Checks for AutoBlock (Simple)
      a:
        enabled: true
        max-violations: 5
        punish-command: ''
      # Checks for AutoBlock (Advanced)
      b:
        enabled: true
        max-violations: 5
        punish-command: ''
  # Movement Detections: Offers various checks designed to detect blatant movement advantages.
  movement:
    speed:
      # Checks for horizontal friction.
      a:
        enabled: true
        max-violations: 10
        punish-command: ''
    sprint:
      # Checks player foodlevel
      a:
        enabled: true
        max-violations: 10
        punish-command: ''
      # Checks player effect buff
      b:
        enabled: true
        max-violations: 10
        punish-command: ''
    # NoSlow Detections: Capable of detecting Vanilla NoSlow. Other NoSlow modules are covered by other checks.
    noslow:
      # Checks if the player is blocking noslow
      a:
        enabled: true
        max-violations: 10
        punish-command: ''
      # Checks if the player is blocking and sprinting simultaneously.
      b:
        enabled: true
        max-violations: 10
        punish-command: ''
    fly:
      # Checks if the player is 0MotionY flight (Impossible)
      a:
        enabled: true
        max-violations: 10
        punish-command: ''
      # Checks if the player spoof ground
      b:
        enabled: true
        max-violations: 10
        punish-command: ''
      # Checks for constant vertical movement.
      c:
        enabled: true
        max-violations: 10
        punish-command: ''
      # Patch some bypass
      d:
        enabled: true
        max-violations: 10
        punish-command: ''

    step:
      # Checks Step (Simple)
      a:
        enabled: true
        max-violations: 10
        punish-command: ''
  # Player Detections: Offers various checks to detect miscellaneous cheats not covered by the other categories.
  player:
    # Rotation Detections: Checks for rotation cheats
    rotation:
      # Rotation direction
      a:
        enabled: true
        max-violations: 10
        punish-command: ''
    # Client Detections: Checks for client cheats (PingSpoof)
    client:
      # Cancel Transaction
      a:
        enabled: true
        max-violations: 10
        punish-command: ''
      # Fake Transaction
      b:
        enabled: true
        max-violations: 10
        punish-command: ''
      # Timer
      c:
        enabled: true
        max-violations: 10
        punish-command: ''
    # Inventory Detections: Checks for various cheats related to inventory (InventoryWalk, ChestSteal)
    inventory:
      # Checks if the player is moving while in their inventory.
      a:
        enabled: true
        max-violations: 0
        punish-command: ''
      # Checks if the player moves items in an inventory too quickly.
      b:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player is attacking and opening inventory
      c:
        enabled: true
        max-violations: 5
        punish-command: ''
    # Protocol Detections: Checks for various flaws in Minecraft's networking protocol hacked clients may have.
    protocol:
      # Checks if the player looks too far up or down.
      a:
        enabled: true
        max-violations: 1
        punish-command: ''
      # Checks if the player is attempting to force the server into thinking they are flying.
      b:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player follows the correct sequence for Update Packets (C03PacketPlayer or PacketPlayInFlying).
      c:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player is forcing the server to move a vehicle incorrectly.
      d:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player moves the slot in their inventory correctly.
      e:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player is forcing the server into thinking they are in a fake vehicle.
      f:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player follows the correct packet sequence for placing blocks.
      g:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player is attacking and placing blocks at the same time.
      h:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player is attacking and blocking at the same time.
      i:
        enabled: true
        max-violations: 15
        punish-command: ''
      # Checks if the player is attacking and digging at the same time.
      j:
        enabled: true
        max-violations: 15
        punish-command: ''
      # PingSpoof
      k:
        enabled: true
        max-violations: 15
        punish-command: ''